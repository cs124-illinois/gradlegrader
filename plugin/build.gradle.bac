buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm'
}

apply plugin: 'com.github.johnrengelman.shadow'

repositories {
    mavenCentral()
}

dependencies {
    compileOnly gradleApi()
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'org.apache.httpcomponents:httpclient:4.5.10'
    implementation 'org.apache.commons:commons-text:1.8'
    implementation 'org.eclipse.jgit:org.eclipse.jgit:5.5.0.201909110433-r'
    // Do not update to 2.10.x - there is a binary-incompatible change that will break other plugins using Jackson
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.9.3'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.9.9'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.9'
}

compileJava {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
}

// Everything below is for publishing to Maven Central

apply plugin: 'signing'
apply plugin: 'maven-publish'

task javadocJar(type: Jar) {
    archiveClassifier.set('javadoc')
    from javadoc
}

task sourceJar(type: Jar) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

artifacts {
    archives jar
    archives sourceJar
    archives javadocJar
}

def ossrhUsername = "username"
def ossrhPassword = "password"
try {
  Properties properties = new Properties()
  properties.load(project.rootProject.file('local.properties').newDataInputStream())
  ossrhUsername = properties.getProperty('ossrh.username')
  ossrhPassword = properties.getProperty('ossrh.password')
} catch (Exception ignored) { }

publishing {
    publications {
        mavenJava(MavenPublication) {
            customizePom(pom)
            groupId 'com.github.cs125-illinois'
            artifactId 'gradlegrader'
            version '2020.10.0'

            from components.java

            artifact(sourceJar) {
                classifier = 'sources'
            }
            artifact(javadocJar) {
                classifier = 'javadoc'
            }
        }
    }
    repositories {
        maven {
            url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            credentials {
                username ossrhUsername
                password ossrhPassword
            }
        }
    }
}

signing {
    sign publishing.publications.getByName("mavenJava")
}

def customizePom(pom) {
    pom.withXml {
        def root = asNode()

        // add all items necessary for maven central publication
        root.children().last() + {
            resolveStrategy = DELEGATE_FIRST

            description 'CS 125 autograder'
            name 'GradleGrader'
            url 'https://github.com/cs125-illinois/gradlegrader'
            organization {
                name 'com.github.cs125-illinois'
                url 'https://github.com/cs125-illinois'
            }
            issueManagement {
                system 'GitHub'
                url 'https://github.com/cs125-illinois/gradlegrader/issues'
            }
            licenses {
                license {
                    name 'Apache License 2.0'
                    url 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
            scm {
                url 'https://github.com/cs125-illinois/gradlegrader'
                connection 'scm:git:git://github.com/cs125-illinois/gradlegrader.git'
                developerConnection 'scm:git:ssh://git@github.com:cs125-illinois/gradlegrader.git'
            }
            developers {
                developer {
                    name 'CS 125'
                }
            }
        }
    }
}
